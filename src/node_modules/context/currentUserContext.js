import React, { useReducer, createContext } from "react";

const initialState = {
    isLoading: false,
    isLoggedIn: null,
    currentUser: null,
};

function reducer(state, action) {
    switch (action.type) {
        case 'LOADING':
            return {
                ...state,
                isLoading: true
            };
        case 'SET_AUTHORIZED':
            return {
                ...state,
                isLoading: false,
                isLoggedIn: true,
                currentUser: action.payload,
            };
        case 'SET_UNAUTHORIZED':
            return {
                ...state,
                isLoggedIn: false
            };
        case 'LOGOUT':
            return {
                ...state,
                isLoggedIn: false,
                currentUser: null,
            };
        default:
            return state;
    }
}


const CurrentUserContext = createContext();

const CurrentUserProvider = ({children}) => {

    const [currentUserState, dispatch] = useReducer(reducer, initialState);

    return (
        <CurrentUserContext.Provider value={[currentUserState, dispatch]}>
            {children}
        </CurrentUserContext.Provider>
    )
}

export {
  CurrentUserContext,
  CurrentUserProvider,
};

