import React, { useContext, useEffect } from "react";

import useLocalstorage from 'hooks/useLocalstorage';
import { CurrentUserContext } from 'context/currentUserContext';
import useFetch from 'hooks/useFetch';

const AutoLoadUser = ({children}) => {

    const [currentUserState, setCurrentUserState] = useContext(CurrentUserContext);
    const [token, setToken] = useLocalstorage('token');
    const [{response}, doFetch] = useFetch('/user');

    useEffect(() => {
        if(!token) {
            return
        }
        doFetch()
        setCurrentUserState(currentUserState => ({...currentUserState, isLoading: true}))
    }, [token, doFetch]);

    useEffect(() => {
        if(!response) {
            return
        }
        setCurrentUserState(currentUserState =>
                                ({
                                    ...currentUserState,
                                    isLoading: false,
                                    isLoggedIn: true,
                                    currentUser: response.data.user,
                                }))
    }, [response]);

    return children
}

export default  AutoLoadUser;
