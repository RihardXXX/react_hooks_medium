import React, { useContext, useEffect } from "react";

import useLocalstorage from 'hooks/useLocalstorage';
import { CurrentUserContext } from 'context/currentUserContext';
import useFetch from 'hooks/useFetch';

const AutoLoadUser = ({children}) => {

    const [currentUserState, dispatch] = useContext(CurrentUserContext);
    const [token, setToken] = useLocalstorage('token');
    const [{response}, doFetch] = useFetch('/user');

    useEffect(() => {
        if(!token) {
            return
        }
        dispatch({type: 'SET_UNAUTHORIZED'});
        doFetch()
        dispatch({type: 'LOADING'});
    }, [token, doFetch, dispatch]);

    useEffect(() => {
        if(!response) {
            return
        }
        dispatch({type: 'SET_AUTHORIZED', payload: response.data.user});
    }, [response, dispatch]);

    return children
}

export default  AutoLoadUser;
