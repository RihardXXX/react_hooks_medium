import React, { Fragment, useEffect, useContext, useState } from 'react';
import useFetch from 'hooks/useFetch';
import Loader from 'components/Loader';
import ErrorMessage from  'components/ErrorMessage';
import { CurrentUserContext } from 'context/currentUserContext'
import {NavLink, Redirect} from "react-router-dom";

import './article.css'

const Article = ({match}) => {

    const slug = match.params.slug;
    const apiUrl = `/articles/${slug}`;
    const [currentUserState] = useContext(CurrentUserContext);
    const [
        {
            response: responseArticle, isLoading: isLoadingArticle, errors: errorsArticle
        },
        doFetchArticle,
    ] = useFetch(apiUrl);
    const [
        {
            response: responseDeleteArticle, errors: errorsDeleteArticle
        },
        doDeleteArticle
    ] = useFetch(apiUrl);

    const isAuthorArticle = () => {
      if(!responseArticle || !currentUserState.isLoggedIn) {
          return;
      }
      return responseArticle.data.article.author.username === currentUserState.currentUser.username;
    };

    const deleteArticle = () => {
        console.log('delete article id: ', responseArticle.data.article);
        doDeleteArticle({
            method: 'delete'
        })
    }


    useEffect(() => {
        doFetchArticle();
    }, [doFetchArticle]);

    if(responseDeleteArticle) {
        return <Redirect to="/" />
    }

    return (
        <div className="container">
            { isLoadingArticle && !responseArticle && <Loader /> }
            { errorsArticle  && <ErrorMessage /> }
            <div className="article-header">
                {
                    responseArticle && !isLoadingArticle && (
                        <Fragment>
                            <div className="article-username">
                               <span className="badge bg-secondary">name</span>
                                &nbsp;
                                {responseArticle.data.article.author.username}
                            </div>
                            <div className="article-bio">
                                <span className="badge bg-secondary">biography</span>
                                &nbsp;
                                : {responseArticle.data.article.author.bio}
                            </div>
                        </Fragment>
                    )
                }
                {
                    isAuthorArticle() && (
                        <div  className="wrapper-edit-delete">
                            <NavLink
                                className="btn btn-outline-primary"
                                to={`/article/${responseArticle.data.article.slug}/edit`}
                            >
                                edit article
                            </NavLink>
                            <button
                                className="btn btn-outline-danger"
                                onClick={deleteArticle}
                            >
                                delete article
                            </button>
                        </div>
                    )
                }
            </div>
            <hr/>
            <div className="article-body">
                {
                    responseArticle && !isLoadingArticle && (
                        <Fragment>
                            <div className="article-username">
                                <span className="badge bg-secondary">title</span>
                                <br/>
                                {responseArticle.data.article.title}
                            </div>
                            <div className="article-bio">
                                <span className="badge bg-secondary">
                                    {responseArticle.data.article.createdAt}
                                </span>
                                &nbsp;
                                <span className="badge bg-secondary">body</span>
                                <br/>
                                {responseArticle.data.article.body}
                            </div>
                        </Fragment>
                    )
                }
            </div>
        </div>
    )
}

export default  Article;
