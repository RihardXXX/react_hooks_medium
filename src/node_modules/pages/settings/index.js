import React, { useContext, useState, useEffect } from "react";
import { Redirect } from "react-router-dom";

import { CurrentUserContext } from 'context/currentUserContext';
import useFetch from 'hooks/useFetch';
import useLocalstorage from 'hooks/useLocalstorage';
import BackendErrorsMessages from "components/backendErrorsMessages";

const Settings = () => {

    const apiUrl = '/user';

    const [currentUserState, dispatch] = useContext(CurrentUserContext);
    const [{ response, isLoading, errors }, doFetch] = useFetch(apiUrl);
    const [token, setToken] = useLocalstorage('token');

    const [image, setImage] = useState('');
    const [username, setUsername] = useState('');
    const [bio, setBio] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('')

    // console.log(currentUserState);

    const handleSubmit = e => {
        e.preventDefault();
        // console.log('submit', bio);
        doFetch({
            method: 'put',
            data: {
                user: {
                    ...currentUserState.currentUser,
                    image,
                    username,
                    bio,
                    email,
                    password
                }
            }
        })
    }

    const onLogout = () => {
        console.log('logout');
        dispatch({ type: 'LOGOUT' });
        setToken('');
    };

    useEffect(() => {
        if(!currentUserState.currentUser) {
            return;
        }
        // console.log(currentUserState.currentUser);
        const { image, username, bio, email } = currentUserState.currentUser;
        setImage(image);
        setUsername(username);
        setBio(bio);
        setEmail(email);
    }, [currentUserState.currentUser]);

    useEffect(() => {
        if(!response){
            return;
        }

        // console.log('response: ', response);

        dispatch({ type: 'SET_AUTHORIZED', payload: response.data.user });
    }, [response, dispatch]);

    // console.log(errors);

    if(currentUserState.isLoggedIn === false) {
        return <Redirect to="/" />;
    };

    return(
        <div className="container">
            { errors && (<BackendErrorsMessages errors={errors.errors}/>) }
            <h1>Profiles update</h1>
            <form onSubmit={handleSubmit}>
                <div className="mb-3">
                    <label htmlFor="url" className="form-label">
                        url image
                    </label>
                    <input
                        type="text"
                        className="form-control"
                        id="url"
                        placeholder="please url profile"
                        value={image}
                        onChange={e => setImage(e.target.value)}
                    />
                </div>
                <div className="mb-3">
                    <label htmlFor="name" className="form-label">
                        username
                    </label>
                    <input
                        type="text"
                        className="form-control"
                        id="name"
                        placeholder="please enter name"
                        value={username}
                        onChange={e => setUsername(e.target.value)}
                    />
                </div>
                <div className="mb-3">
                    <label htmlFor="bio" className="form-label">
                        bio
                    </label>
                    <textarea
                        className="form-control"
                        id="bio" rows="3"
                        placeholder="please enter biography"
                        value={bio}
                        onChange={e => setBio(e.target.value)}
                    >

                    </textarea>
                </div>
                <div className="mb-3">
                    <label htmlFor="email" className="form-label">
                        email
                    </label>
                    <input
                        type="email"
                        className="form-control"
                        id="email"
                        placeholder="please enter email"
                        value={email}
                        onChange={e => setEmail(e.target.value)}
                    />
                </div>
                <div className="mb-3">
                    <label htmlFor="password" className="form-label">
                        password
                    </label>
                    <input
                        type="password"
                        className="form-control"
                        id="password"
                        placeholder="please enter tags article"
                        value={password}
                        onChange={e => setPassword(e.target.value)}
                    />
                </div>
                <button type="submit" className="btn btn-success">
                    update profiles
                </button>
            </form>
            <hr/>
            <button
                type="button"
                className="btn btn-danger"
                onClick={onLogout}
            >
                Exit
            </button>
        </div>
    )
}

export default Settings;
