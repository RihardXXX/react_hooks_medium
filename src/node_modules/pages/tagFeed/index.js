import React, { useEffect, Fragment } from 'react';
import Feed from 'components/Feed';
import useFetch from 'hooks/useFetch';
import Pagination from 'components/Pagination';
import ErrorMessage from 'components/ErrorMessage';
import Loader from 'components/Loader';
import PopularTags from 'components/PopularTags';
const queryString = require('query-string');
import { limit, getPaginator } from 'utils'
import FeedToggle from 'components/FeedToggle'

import './index.css'
// https://conduit.productionready.io/api/articles?limit=10&offset=0

const TagFeed = ({location, match}) => {
    const tagName = match.params.slug;

    console.log('tag: ', tagName);

    const { currentPage, offset } = getPaginator(location.search)

    // console.log('cuurentPage: ', currentPage);
    // console.log('offset', offset);

    const paramsQuery = queryString.stringify({
        limit,
        offset,
        tag: tagName
    })

    // console.log(paramsQuery);
    // console.log('match', match);

    const apiUrl = `/articles?${paramsQuery}`;
    const [{response, isLoading, errors}, doFetch] = useFetch(apiUrl);

    useEffect(() => {
        doFetch()
    }, [currentPage, doFetch, tagName])

    // console.log(response);
    // console.log(errors);

    return (
        <div>
            <div className="myBanner">
                <div className="container">
                    <h1 className="logo-font">conduit</h1>
                    <p>A place to share your knowledge.</p>
                </div>
            </div>
            <div className="container">
                <div className="row">
                    <div className="col-8">
                        <FeedToggle tagname={tagName} />
                        { isLoading && <Loader /> }
                        { errors && <ErrorMessage /> }
                        { !isLoading && response && (
                            <Fragment>
                                { !response.data.articles.length && (
                                    <h3>Ooops tags feed is not</h3>
                                ) }
                                <Feed articles={response.data.articles} />
                                <Pagination
                                    total={response.data.articlesCount}
                                    limit={limit}
                                    url={match.url}
                                    currentPage={currentPage}
                                />
                            </Fragment>
                            ) }
                    </div>
                    <div className="col-4">
                        <PopularTags />
                    </div>
                </div>
            </div>
        </div>
    )
}

export default  TagFeed;
